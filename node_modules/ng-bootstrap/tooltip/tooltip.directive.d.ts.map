{"version":3,"file":"tooltip.directive.d.ts","sources":["tooltip.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef, ViewContainerRef, EventEmitter, Renderer, ElementRef, OnInit, OnDestroy } from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { ComponentLoaderFactory } from '../component-loader';\nexport declare class TooltipDirective implements OnInit, OnDestroy {\n    /**\n     * Content to be displayed as tooltip.\n     */\n    tooltip: string | TemplateRef<any>;\n    /** Fired when tooltip content changes */\n    tooltipChange: EventEmitter<string | TemplateRef<any>>;\n    /**\n     * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     */\n    placement: string;\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     */\n    triggers: string;\n    /**\n     * A selector specifying the element the tooltip should be appended to.\n     * Currently only supports \"body\".\n     */\n    container: string;\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     */\n    isOpen: boolean;\n    /**\n     * Allows to disable tooltip\n     */\n    isDisabled: boolean;\n    /**\n     * Emits an event when the tooltip is shown\n     */\n    onShown: EventEmitter<any>;\n    /**\n     * Emits an event when the tooltip is hidden\n     */\n    onHidden: EventEmitter<any>;\n    /** @deprecated - please use `tooltip` instead */\n    htmlContent: string | TemplateRef<any>;\n    /** @deprecated - please use `placement` instead */\n    _placement: string;\n    /** @deprecated - please use `isOpen` instead*/\n    _isOpen: boolean;\n    /** @deprecated - please use `isDisabled` instead */\n    _enable: boolean;\n    /** @deprecated - please use `container=\"body\"` instead */\n    _appendToBody: boolean;\n    /** @deprecated - removed, will be added to configuration */\n    _animation: boolean;\n    /** @deprecated - will replaced with customClass */\n    _popupClass: string;\n    /** @deprecated - removed */\n    _tooltipContext: any;\n    /** @deprecated */\n    _delay: number;\n    /** @deprecated */\n    _fadeDuration: number;\n    /** @deprecated -  please use `triggers` instead */\n    _tooltipTrigger: string | Array<string>;\n    /** @deprecated */\n    tooltipStateChanged: EventEmitter<boolean>;\n    protected _delayTimeoutId: number;\n    private _tooltip;\n    constructor(_viewContainerRef: ViewContainerRef, _renderer: Renderer, _elementRef: ElementRef, cis: ComponentLoaderFactory, config: TooltipConfig);\n    ngOnInit(): void;\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    toggle(): void;\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    show(): void;\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    hide(): void;\n    ngOnDestroy(): void;\n}\n"]}