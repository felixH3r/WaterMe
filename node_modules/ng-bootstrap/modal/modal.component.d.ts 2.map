{"version":3,"file":"modal.component.d.ts","sources":["modal.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ComponentRef, ElementRef, EventEmitter, OnDestroy, Renderer, ViewContainerRef } from '@angular/core';\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport { ModalOptions } from './modal-options.class';\nimport { ComponentLoaderFactory } from '../component-loader/component-loader.factory';\n/** Mark any code with directive to show it's content in modal */\nexport declare class ModalDirective implements AfterViewInit, OnDestroy {\n    /** allows to set modal configuration via element property */\n    config: ModalOptions;\n    /** This event fires immediately when the `show` instance method is called. */\n    onShow: EventEmitter<ModalDirective>;\n    /** This event is fired when the modal has been made visible to the user (will wait for CSS transitions to complete) */\n    onShown: EventEmitter<ModalDirective>;\n    /** This event is fired immediately when the hide instance method has been called. */\n    onHide: EventEmitter<ModalDirective>;\n    /** This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete). */\n    onHidden: EventEmitter<ModalDirective>;\n    isAnimated: boolean;\n    readonly isShown: boolean;\n    protected _config: ModalOptions;\n    protected _isShown: boolean;\n    protected isBodyOverflowing: boolean;\n    protected originalBodyPadding: number;\n    protected scrollbarWidth: number;\n    protected timerHideModal: number;\n    protected timerRmBackDrop: number;\n    protected _element: ElementRef;\n    protected _renderer: Renderer;\n    protected backdrop: ComponentRef<ModalBackdropComponent>;\n    private _backdrop;\n    private _dialog;\n    onClick(event: any): void;\n    onEsc(): void;\n    constructor(_element: ElementRef, _viewContainerRef: ViewContainerRef, _renderer: Renderer, clf: ComponentLoaderFactory);\n    ngOnDestroy(): any;\n    ngAfterViewInit(): any;\n    /** Allows to manually toggle modal visibility */\n    toggle(): void;\n    /** Allows to manually open modal */\n    show(): void;\n    /** Allows to manually close modal */\n    hide(event?: Event): void;\n    protected setScrollbar(): void;\n    protected resetScrollbar(): void;\n    protected getScrollbarWidth(): number;\n}\n"]}