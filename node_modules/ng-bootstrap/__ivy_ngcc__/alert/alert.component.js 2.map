{"version":3,"file":"alert.component.js","sources":["../../src/alert/alert.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AlertConfig } from './alert.config';\nimport { OnChange } from '../utils/decorators';\n\n\nexport class AlertComponent implements OnInit {\n  /** Alert type. Provides one of four bootstrap supported contextual classes: `success`, `info`, `warning` and `danger` */\n   public type: string = 'warning';\n  /** If set, displays an inline \"Close\" button */\n  @OnChange()\n   public dismissible: boolean = false;\n  /** Number in milliseconds, after which alert will be closed */\n   public dismissOnTimeout: number | string;\n\n  /** This event fires immediately after close instance method is called, $event is an instance of Alert component. */\n   public onClose: EventEmitter<AlertComponent> = new EventEmitter<AlertComponent>();\n  /** This event fires when alert closed, $event is an instance of Alert component */\n   public onClosed: EventEmitter<AlertComponent> = new EventEmitter<AlertComponent>();\n\n  public isClosed: boolean = false;\n  public classes: string = '';\n  public dismissibleChange: EventEmitter<string> = new EventEmitter();\n\n  public constructor(_config: AlertConfig) {\n    Object.assign(this, _config);\n    this.dismissibleChange.subscribe((dismissible: boolean) => {\n      this.classes = this.dismissible ? 'alert-dismissible' : '';\n    });\n  }\n\n  public ngOnInit(): void {\n    if (this.dismissOnTimeout) {\n      // if dismissOnTimeout used as attr without binding, it will be a string\n      setTimeout(() => this.close(),\n        parseInt(this.dismissOnTimeout as string, 10));\n    }\n  }\n\n  // todo: animation ` If the .fade and .in classes are present on the element,\n  // the alert will fade out before it is removed`\n  /**\n   * Closes an alert by removing it from the DOM.\n   */\n  public close(): void {\n    if (this.isClosed) {\n      return;\n    }\n\n    this.onClose.emit(this);\n    this.isClosed = true;\n    this.onClosed.emit(this);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'alert,ngx-alert',\n  template: `\n<template [ngIf]=\"!isClosed\">\n  <div [class]=\"'alert alert-' + type\" role=\"alert\" [ngClass]=\"classes\">\n    <template [ngIf]=\"dismissible\">\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"close()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n    </template>\n    <ng-content></ng-content>\n  </div>\n</template>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlertConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'dismissible': [{ type: Input },],\n'dismissOnTimeout': [{ type: Input },],\n'onClose': [{ type: Output },],\n'onClosed': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}