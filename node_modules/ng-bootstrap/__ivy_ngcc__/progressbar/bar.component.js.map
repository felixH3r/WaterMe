{"version":3,"file":"bar.component.js","sources":["../../src/progressbar/bar.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAqB,MAAM,eAAe;AACzE,OACO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB;AAExD,oBAAoB;AACpB,iCAAiC;;;;;;;AAEjC;AAAyC,IAyBvC,sBAAoB,QAA0B;AAChD,QAPS,YAAO,GAAU,CAAC,CAAC;AAC5B,QAMI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC7B,IAAE,CAAC;AACH,IArBE,sBAAW,+BAAK;AAAI,QAFpB,oCAAoC;AACtC,aACE;AAAc,YACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;AACvB,QAAE,CAAC;AAEH,aAAE,UAAiB,CAAQ;AAC3B,YAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACxB,gBAAM,MAAM,CAAC;AACb,YAAI,CAAC;AACL,YAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACpB,YAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACjC,QAAE,CAAC;AAEH;AAA0B;AACF,OAXrB;AACH,IAmBS,+BAAQ,GAAf;AAAc,QACZ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC/B,IAAE,CAAC;AAEH,IAAS,kCAAW,GAAlB;AAAc,QACZ,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAClC,IAAE,CAAC;AAEH,IAAS,4CAAqB,GAA5B;AAAc,QACZ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACtE,QACI,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,KAAY,EAAE,GAAgB;AAAI,YAC1F,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;AACjC,QAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,QACI,EAAE,CAAC,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC;AAChC,YAAM,IAAI,CAAC,OAAO,IAAI,eAAe,GAAG,GAAG,CAAC;AAC5C,QAAI,CAAC;AACL,IAAE,CAAC,CAgBD;IAfK,JAgBP,IAAA,kBAAkB;IAhBD,GAA0B,UAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,3CAgB1B,IAAO,2BAAc,GAAmE,cAAM,OAAA;QAf5F,QAAQ,EAAE,KAAK,sBACf,QAAQ,EAAE,vDAeZ,QAAA,EAAC,IAAI,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;AACzD,KAAC,EAF6F,CAE7F,CAAC;AACF,IAAO,2BAAc,GAA2C;AAChE,QAAA,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC1B,QAAA,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC3B,KAAC;;iIAVA,kBACA,EAAG,EAAE,OACL;;;;;;;;;;;;;;;;;;;;;oBAQC;AACF,IAAA,mBAAC;AAAD,CAAC,AAxED,IAwEC;AACD","sourcesContent":["import { Component, Host, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { ProgressDirective } from './progress.directive';\n\n// todo: number pipe\n// todo: use query from progress?\n\nexport class BarComponent implements OnInit, OnDestroy {\n  public max:number;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n   public type:string;\n  /** current value of progress bar */\n  \n  public get value():number {\n    return this._value;\n  }\n\n  public set value(v:number) {\n    if (!v && v !== 0) {\n      return;\n    }\n    this._value = v;\n    this.recalculatePercentage();\n  }\n\n  public percent:number = 0;\n  public transition:string;\n  public progress:ProgressDirective;\n\n  protected _value:number;\n\n  public constructor( progress:ProgressDirective) {\n    this.progress = progress;\n  }\n\n  public ngOnInit():void {\n    this.progress.addBar(this);\n  }\n\n  public ngOnDestroy():void {\n    this.progress.removeBar(this);\n  }\n\n  public recalculatePercentage():void {\n    this.percent = +(100 * this.value / this.progress.max).toFixed(2);\n\n    let totalPercentage = this.progress.bars.reduce(function (total:number, bar:BarComponent):number {\n      return total + bar.percent;\n    }, 0);\n\n    if (totalPercentage > 100) {\n      this.percent -= totalPercentage - 100;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bar',\n  template: `\n  <div class=\"progress-bar\"\n    style=\"min-width: 0;\"\n    role=\"progressbar\"\n    [ngClass]=\"type && 'progress-bar-' + type\"\n    [ngStyle]=\"{width: (percent < 100 ? percent : 100) + '%', transition: transition}\"\n    aria-valuemin=\"0\"\n    [attr.aria-valuenow]=\"value\"\n    [attr.aria-valuetext]=\"percent.toFixed(0) + '%'\"\n    [attr.aria-valuemax]=\"max\"><ng-content></ng-content></div>\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProgressDirective, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}