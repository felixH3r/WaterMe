{"version":3,"file":"popover.config.js","sources":["../../src/popover/popover.config.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;AAE1C;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AAEO,IAFP;AAA2B,QACzB;AACF;AAEA,WADK;AACL,QAAS,cAAS,GAAW,KAAK,CAAC;AACnC,QAAE;AACF;AACM;AAEA,WADD;AACL,QAAS,aAAQ,GAAW,OAAO,CAAC;AACpC,IAWA,CAAC,AAJC;IAFK,JAGP,IAAA,kBAAkB;KAHD,GAA0B,UAC3C,EAAE,IAAI,EAAE,UAAU,EAAE,OACnB,7CAED,IAAO,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F;;;;;gDAAC;AACF,IAAA,oBAAC;AAAD,CAAC,AArBD,IAqBC;AACD","sourcesContent":["import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n\nexport class PopoverConfig {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  public placement: string = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  public triggers: string = 'click';\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  public container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}