{"version":3,"file":"bs-dropdown-container.component.js","sources":["../../src/dropdown/bs-dropdown-container.component.ts"],"names":[],"mappings":"OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAa,MAAM,eAAe;AAC7E,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB;;;;;AAGrD;AAAyD,IASvD,sCAAoB,MAAuB;AAC7C,QAVA,iBAqCC;AACD,QA7BsB,WAAM,GAAN,MAAM,CAAiB;AAAC,QAR5C,WAAM,GAAG,KAAK,CAAC;AACjB,QAQI,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAc;AAAI,YACpE,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC1B,QAAI,CAAC,CAAC,CAAC;AACP,IAAE,CAAC;AACH,IAXE,sBAAI,mDAAS;AAAI,aAAjB;AAAc,YACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;AACjC,QAAE,CAAC;AAEH;AAA0B;AAEJ,OAJnB;AACH,IASE,kDAAW,GAAX;AAAc,QACZ,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;AACrC,IAAE,CAAC,CAeD;IAdK,JAeP,IAAA,kBAAkB;oBAfD,GAA0B,UAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,3DAe1B,IAAO,2CAAc,GAAmE,cAAM,OAAA;QAd5F,QAAQ,EAAE,lBAeZ,QAAA,EAAC,IAAI,EAAE,eAAe,GAAG;KAfU,LAgBnC,KAAC,EAF6F,CAE7F;iBAfC,eAAe,EAAE,uBAAuB,CAAC,MAAM,sBAC/C,IAAI,EAAE,0BACJ,KAAK,EAAE,mCAAmC,sBAC3C;gBACD,QAAQ,EAAE,8MAKT,kBACF,EAAG,EAAE,OACL;;;;;;;;;;;;;;;;;;gFAIC;AACF,IAAA,mCAAC;AAAD,CAAC,AArCD,IAqCC;AACD","sourcesContent":["import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n  private _subscription: any;\n\n  constructor(private _state: BsDropdownState) {\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content></div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}