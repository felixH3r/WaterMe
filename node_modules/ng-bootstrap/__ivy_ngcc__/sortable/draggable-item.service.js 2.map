{"version":3,"file":"draggable-item.service.js","sources":["../../src/sortable/draggable-item.service.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;AAC1C,OACO,EAAE,OAAO,EAAE,MAAM,cAAc;;AAItC;AACa,IADb;AAAkC,QAGtB,cAAS,GAA2B,IAAI,OAAO,EAAiB,CAAC;AAC7E,IAgCA,CAAC;AACD,IAhCW,wCAAS,GAAhB,UAAiB,IAAmB;AAAI,QACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAClC,IAAI,CAAC;AAEL,IAAW,sCAAO,GAAd;AAAc,QACV,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;AAClC,IAAI,CAAC;AAEL,IAAW,0CAAW,GAAlB,UAAmB,aAAqB,EAAE,QAAgB;AAAI,QAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,KAAK,aAAa,CAAC,CAAC,CAAC;AACjE,YAAY,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;AAChF,YAAY,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC;AAC7D,YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACpD,YAAY,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAC9B,EAAE,EACF,IAAI,CAAC,aAAa,EAClB,EAAE,4BAAa,EAAE,CAAC,EAAE,QAAQ,EAAE,CACjC,CAAC;AACd,QAAQ,CAAC;AACT,QAAQ,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;AAClC,IAAI,CAAC;AAEL,IAAW,4CAAa,GAApB;AAAc,QACV,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;AAC9B,IAAI,CAAC,CAGH;IAFK,JAGP,IAAA,kBAAkB;YAHD,GAA0B,UAC3C,EAAE,IAAI,EAAE,UAAU,EAAE,OACnB,pDAED,IAAO,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F;;;;;gDAAC;AACF,IAAA,2BAAC;AAAD,CAAC,AApCD,IAoCC;AACD","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { DraggableItem } from './draggable-item';\n\n\nexport class DraggableItemService {\n    private draggableItem: DraggableItem;\n\n    private onCapture: Subject<DraggableItem> = new Subject<DraggableItem>();\n\n    public dragStart(item: DraggableItem): void {\n        this.draggableItem = item;\n    }\n\n    public getItem(): DraggableItem {\n        return this.draggableItem;\n    }\n\n    public captureItem(overZoneIndex: number, newIndex: number): DraggableItem {\n        if (this.draggableItem.overZoneIndex !== overZoneIndex) {\n            this.draggableItem.lastZoneIndex = this.draggableItem.overZoneIndex;\n            this.draggableItem.overZoneIndex = overZoneIndex;\n            this.onCapture.next(this.draggableItem);\n            this.draggableItem = Object.assign(\n                {},\n                this.draggableItem,\n                { overZoneIndex, i: newIndex }\n            );\n        }\n        return this.draggableItem;\n    }\n\n    public onCaptureItem(): Observable<DraggableItem> {\n        return this.onCapture;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}