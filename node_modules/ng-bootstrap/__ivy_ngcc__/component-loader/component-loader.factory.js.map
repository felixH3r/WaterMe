{"version":3,"file":"component-loader.factory.js","sources":["../../src/component-loader/component-loader.factory.ts"],"names":[],"mappings":"OAAO,EACL,UAAU,EAAE,MAAM,EAAoB,wBAAwB,EAAE,QAAQ,EAEzE,MAAM,eAAe;AACtB,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B;AAC1D,OAAO,EAAE,kBAAkB,EAAE,MAAM,gBAAgB;;;AAGnD;AACa,IAKX,gCAAmB,wBAAkD,EAAE,MAAc,EAClE,QAAkB,EAAE,UAA8B;AACvE,QAAI,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC1B,QAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC9B,QAAI,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAClC,QAAI,IAAI,CAAC,yBAAyB,GAAG,wBAAwB,CAAC;AAC9D,IAAE,CAAC;AACH,IACE;AACF;AACE;AACE;AACE;AACE;AAEJ,OADC;AACL,IAAS,6CAAY,GAAnB,UAAuB,WAAuB,EAAE,iBAAmC,EAAE,SAAmB;AAAI,QAC1G,MAAM,CAAC,IAAI,eAAe,CAAI,iBAAiB,EAAE,SAAS,EAAE,WAAW,EACrE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AACtF,IAAE,CAAC,CAGD;IAFK,JAGP,IAAA,kBAAkB;cAHD,GAA0B,UAC3C,EAAE,IAAI,EAAE,UAAU,EAAE,OACnB,tDAED,IAAO,qCAAc,GAAmE,cAAM,OAAA;AAC9F,QAAA,EAAC,IAAI,EAAE,wBAAwB,GAAG;AAClC,QAAA,EAAC,IAAI,EAAE,MAAM,GAAG;AAChB,QAAA,EAAC,IAAI,EAAE,QAAQ,GAAG;AAClB,QAAA,EAAC,IAAI,EAAE,kBAAkB,GAAG;AAC5B,KAAC,EAL6F,CAK7F;;;;;kLAAC;AACF,IAAA,6BAAC;AAAD,CAAC,AAnCD,IAmCC;AACD","sourcesContent":["import {\n  Injectable, NgZone, ViewContainerRef, ComponentFactoryResolver, Injector,\n  Renderer, ElementRef\n} from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning';\n\n\nexport class ComponentLoaderFactory {\n  private _componentFactoryResolver: ComponentFactoryResolver;\n  private _ngZone: NgZone;\n  private _injector: Injector;\n  private _posService: PositioningService;\n\n  public constructor(componentFactoryResolver: ComponentFactoryResolver, ngZone: NgZone,\n                     injector: Injector, posService: PositioningService) {\n    this._ngZone = ngZone;\n    this._injector = injector;\n    this._posService = posService;\n    this._componentFactoryResolver = componentFactoryResolver;\n  }\n\n  /**\n   *\n   * @param _elementRef\n   * @param _viewContainerRef\n   * @param _renderer\n   * @returns {ComponentLoader}\n   */\n  public createLoader<T>(_elementRef: ElementRef, _viewContainerRef: ViewContainerRef, _renderer: Renderer):ComponentLoader<T> {\n    return new ComponentLoader<T>(_viewContainerRef, _renderer, _elementRef,\n      this._injector, this._componentFactoryResolver, this._ngZone, this._posService);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: NgZone, },\n{type: Injector, },\n{type: PositioningService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}