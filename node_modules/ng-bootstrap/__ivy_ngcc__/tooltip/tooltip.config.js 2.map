{"version":3,"file":"tooltip.config.js","sources":["../../src/tooltip/tooltip.config.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;AAE1C,0CAA0C;;AAE1C;AACa,IADb;AAA2B,QACzB,+EAA+E;AACjF,QAAS,cAAS,GAAU,KAAK,CAAC;AAClC,QAAE,0DAA0D;AAC5D,QAAS,aAAQ,GAAU,aAAa,CAAC;AACzC,IAQA,CAAC,AAJC;IAFK,JAGP,IAAA,kBAAkB;KAHD,GAA0B,UAC3C,EAAE,IAAI,EAAE,UAAU,EAAE,OACnB,7CAED,IAAO,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F;;;;;gDAAC;AACF,IAAA,oBAAC;AAAD,CAAC,AAbD,IAaC;AACD","sourcesContent":["import { Injectable } from '@angular/core';\n\n/** Default values provider for tooltip */\n\nexport class TooltipConfig {\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n  public placement:string = 'top';\n  /** array of event names which triggers tooltip opening */\n  public triggers:string = 'hover focus';\n  /** a selector specifying the element the tooltip should be appended to. Currently only supports \"body\" */\n  public container: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}