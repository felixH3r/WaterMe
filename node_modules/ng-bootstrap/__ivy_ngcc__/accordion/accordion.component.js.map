{"version":3,"file":"accordion.component.js","sources":["../../src/accordion/accordion.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe;AAChD,OACO,EAAE,eAAe,EAAE,MAAM,oBAAoB;AAEpD,mGAAmG;;;;;AAEnG;AACa,IAKX,4BAAmB,MAAuB;AAC5C,QAHY,WAAM,GAA8B,EAAE,CAAC;AACnD,QAEI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAChC,IAAE,CAAC;AACH,IACS,6CAAgB,GAAvB,UAAwB,SAAkC;AAAI,QAC5D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AAC5B,YAAM,MAAM,CAAC;AACb,QAAI,CAAC;AACL,QACI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAA8B;AAAI,YACrD,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;AAChC,gBAAQ,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;AAC7B,YAAM,CAAC;AACP,QAAI,CAAC,CAAC,CAAC;AACP,IAAE,CAAC;AAEH,IAAS,qCAAQ,GAAf,UAAgB,KAA8B;AAAI,QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B,IAAE,CAAC;AAEH,IAAS,wCAAW,GAAlB,UAAmB,KAA8B;AAAI,QACnD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3C,QAAI,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,YAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACnC,QAAI,CAAC;AACL,IAAE,CAAC,CAYD;IAXK,JAYP,IAAA,kBAAkB;UAZD,GAA0B,UAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,jDAY1B,IAAO,iCAAc,GAAmE,cAAM,OAAA;QAX5F,QAAQ,EAAE,WAAW,7BAYvB,QAAA,EAAC,IAAI,EAAE,eAAe,GAAG;AACzB,KAAC,EAF6F,CAE7F,CAAC;KAZA,QAAQ,EAAE,fAaZ,IAAO,iCAAc,GAA2C;AAbzB,sBACrC,tBAaF,QAAA,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;MAbJ,NAc7B,KAAC;oBAbC,IAAI,EAAE,0BACJ,qBAAqB,EAAE,MAAM,0BAC7B,6BAA6B,EAAC,aAAa;mBAC3C,IAAI,EAAE,SAAS,sBAChB,kBACF,EAAG,EAAE,OACL;;;;;;;;;;;;;;;;;;;;;oBAOC;AACF,IAAA,yBAAC;AAAD,CAAC,AAnDD,IAmDC;AACD","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { AccordionPanelComponent } from './accordion-group.component';\nimport { AccordionConfig } from './accordion.config';\n\n/** Displays collapsible content panels for presenting information in a limited amount of space. */\n\nexport class AccordionComponent {\n  /** if `true` expanding one item will close all others */\n   public closeOthers: boolean;\n\n  protected groups: AccordionPanelComponent[] = [];\n\n  public constructor(config: AccordionConfig) {\n    Object.assign(this, config);\n  }\n\n  public closeOtherPanels(openGroup: AccordionPanelComponent): void {\n    if (!this.closeOthers) {\n      return;\n    }\n\n    this.groups.forEach((group: AccordionPanelComponent) => {\n      if (group !== openGroup) {\n        group.isOpen = false;\n      }\n    });\n  }\n\n  public addGroup(group: AccordionPanelComponent): void {\n    this.groups.push(group);\n  }\n\n  public removeGroup(group: AccordionPanelComponent): void {\n    let index = this.groups.indexOf(group);\n    if (index !== -1) {\n      this.groups.splice(index, 1);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'accordion',\n  template: `<ng-content></ng-content>`,\n  // tslint:disable-next-line\n  host: {\n    '[class.panel-group]': 'true',\n    '[attr.aria-multiselectable]':'closeOthers',\n    role: 'tablist'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AccordionConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'closeOthers': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}