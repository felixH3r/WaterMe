{"version":3,"file":"bs-dropdown.directive.d.ts","sources":["bs-dropdown.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnDestroy, OnInit, Renderer, ViewContainerRef } from '@angular/core';\nimport 'rxjs/add/operator/filter';\nimport { ComponentLoaderFactory } from '../component-loader';\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownState } from './bs-dropdown.state';\nexport declare class BsDropdownDirective implements OnInit, OnDestroy {\n    private _elementRef;\n    private _renderer;\n    private _viewContainerRef;\n    private _cis;\n    private _config;\n    private _state;\n    /**\n     * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     */\n    placement: string;\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     */\n    triggers: string;\n    /**\n     * A selector specifying the element the popover should be appended to.\n     * Currently only supports \"body\".\n     */\n    container: string;\n    /**\n     * This attribute indicates that the dropdown should be opened upwards\n     */\n    dropup: boolean;\n    /**\n     * Indicates that dropdown will be closed on item or document click,\n     * and after pressing ESC\n     */\n    autoClose: boolean;\n    /**\n     * Disables dropdown toggle and hides dropdown menu if opened\n     */\n    isDisabled: boolean;\n    /**\n     * Returns whether or not the popover is currently being shown\n     */\n    isOpen: boolean;\n    /**\n     * Emits an event when the popover is shown\n     */\n    onShown: EventEmitter<any>;\n    /**\n     * Emits an event when the popover is hidden\n     */\n    onHidden: EventEmitter<any>;\n    readonly isBs4: boolean;\n    private _isInlineOpen;\n    private _showInline;\n    private _inlinedMenu;\n    private _isDisabled;\n    private _dropdown;\n    private _subscriptions;\n    constructor(_elementRef: ElementRef, _renderer: Renderer, _viewContainerRef: ViewContainerRef, _cis: ComponentLoaderFactory, _config: BsDropdownConfig, _state: BsDropdownState);\n    ngOnInit(): void;\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    show(): void;\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    hide(): void;\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    toggle(value?: boolean): void;\n    ngOnDestroy(): void;\n}\n"]}