{"version":3,"file":"timepicker.component.d.ts","sources":["timepicker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { TimepickerConfig } from './timepicker.config';\nexport declare const TIMEPICKER_CONTROL_VALUE_ACCESSOR: any;\nexport declare class TimepickerComponent implements ControlValueAccessor, OnInit {\n    /** hours change step */\n    hourStep: number;\n    /** hours change step */\n    minuteStep: number;\n    /** if true hours and minutes fields will be readonly */\n    readonlyInput: boolean;\n    /** if true scroll inside hours and minutes inputs will change time */\n    mousewheel: boolean;\n    /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n    arrowkeys: boolean;\n    /** if true spinner arrows above and below the inputs will be shown */\n    showSpinners: boolean;\n    /** minimum time user can select */\n    min: Date;\n    /** maximum time user can select */\n    max: Date;\n    /** meridian labels based on locale */\n    meridians: string[];\n    /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n    showMeridian: boolean;\n    onChange: any;\n    onTouched: any;\n    hours: string;\n    minutes: string;\n    invalidHours: any;\n    invalidMinutes: any;\n    meridian: any;\n    protected _selected: Date;\n    protected _showMeridian: boolean;\n    protected selected: Date;\n    protected config: TimepickerConfig;\n    constructor(_config: TimepickerConfig);\n    ngOnInit(): void;\n    writeValue(v: any): void;\n    registerOnChange(fn: (_: any) => {}): void;\n    registerOnTouched(fn: () => {}): void;\n    setDisabledState(isDisabled: boolean): void;\n    updateHours(): void;\n    hoursOnBlur(): void;\n    updateMinutes(): void;\n    minutesOnBlur(): void;\n    incrementHours(): void;\n    decrementHours(): void;\n    incrementMinutes(): void;\n    decrementMinutes(): void;\n    noIncrementHours(): boolean;\n    noDecrementHours(): boolean;\n    noIncrementMinutes(): boolean;\n    noDecrementMinutes(): boolean;\n    toggleMeridian(): void;\n    noToggleMeridian(): boolean;\n    protected refresh(): void;\n    protected updateTemplate(): void;\n    protected getHoursFromTemplate(): number;\n    protected getMinutesFromTemplate(): number;\n    protected pad(value: string | number): string;\n    protected addMinutesToSelected(minutes: any): void;\n}\n"]}